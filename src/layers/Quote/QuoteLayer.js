// Generated by ReScript, PLEASE EDIT WITH CARE

import * as QuoteGapStyleCssJs from "./Gap/QuoteGapStyle.css.js";
import * as QuoteSizeStyleCssJs from "./Size/QuoteSizeStyle.css.js";
import * as QuoteSymbolStyleCssJs from "./Symbol/QuoteSymbolStyle.css.js";
import * as QuotePositionStyleCssJs from "./Position/QuotePositionStyle.css.js";

var quoteGap = QuoteGapStyleCssJs.QuoteGapStyle;

var quotePosition = QuotePositionStyleCssJs.QuotePositionStyle;

var quoteSize = QuoteSizeStyleCssJs.QuoteSizeStyle;

var quoteSymbol = QuoteSymbolStyleCssJs.QuoteSymbolStyle;

function resolve(i) {
  var match = i.quoteGap;
  var match$1 = i.quotePosition;
  var match$2 = i.quoteSize;
  var match$3 = i.quoteSymbol;
  return [
            match === "none" ? quoteGap.style.none : (
                match === "xxlarge" ? quoteGap.style.xxlarge : (
                    match === "xlarge" ? quoteGap.style.xlarge : (
                        match === "large" ? quoteGap.style.large : (
                            match === "xxsmall" ? quoteGap.style.xxsmall : (
                                match === "xsmall" ? quoteGap.style.xsmall : (
                                    match === "medium" ? quoteGap.style.medium : (
                                        match === "small" ? quoteGap.style.small : (
                                            match === "xxxlarge" ? quoteGap.style.xxxlarge : quoteGap.style.xxxsmall
                                          )
                                      )
                                  )
                              )
                          )
                      )
                  )
              ),
            match$1 === "inside" ? quotePosition.style.inside : quotePosition.style.outside,
            match$2 === "none" ? quoteSize.style.none : (
                match$2 === "xxlarge" ? quoteSize.style.xxlarge : (
                    match$2 === "xlarge" ? quoteSize.style.xlarge : (
                        match$2 === "large" ? quoteSize.style.large : (
                            match$2 === "xxsmall" ? quoteSize.style.xxsmall : (
                                match$2 === "xsmall" ? quoteSize.style.xsmall : (
                                    match$2 === "medium" ? quoteSize.style.medium : (
                                        match$2 === "small" ? quoteSize.style.small : (
                                            match$2 === "xxxlarge" ? quoteSize.style.xxxlarge : quoteSize.style.xxxsmall
                                          )
                                      )
                                  )
                              )
                          )
                      )
                  )
              ),
            match$3 === "LeftDouble" ? quoteSymbol.style.LeftDouble : (
                match$3 === "RightDoubleAngle" ? quoteSymbol.style.RightDoubleAngle : (
                    match$3 === "RightDouble" ? quoteSymbol.style.RightDouble : (
                        match$3 === "LeftDoubleAngle" ? quoteSymbol.style.LeftDoubleAngle : quoteSymbol.style.none
                      )
                  )
              )
          ].join(" ");
}

var QuoteLayer = {
  resolve: resolve
};

export {
  quoteGap ,
  quotePosition ,
  quoteSize ,
  quoteSymbol ,
  QuoteLayer ,
  
}
/* quoteGap Not a pure module */
